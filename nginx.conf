events {
    worker_connections 1024;
}

http {
    # Security headers configuration
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';";

    # Limit request size
    client_max_body_size 10M;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=frontend:10m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=attack:10m rate=1r/s;

    # Block bad bots
    map $http_user_agent $bad_bot {
        default 0;
        ~*nikto 1;
        ~*sqlmap 1;
        ~*nmap 1;
        ~*scanner 1;
    }

    # HTTP server - redirect to HTTPS
    server {
        listen 80;
        server_name acschat.cc 13.238.233.29;
        return 301 https://$server_name$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl;
        http2 on;
        server_name acschat.cc 13.238.233.29;
        
        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/acschat.cc/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/acschat.cc/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Block bad bots
        if ($bad_bot) {
            return 403;
        }

        # Frontend static files
        location / {
            limit_req zone=frontend burst=50 nodelay;
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API proxy (with authentication and restrictions)
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            # Basic request validation
            if ($request_method !~ ^(GET|POST)$ ) {
                return 405;
            }
            
            # Block form data attacks
            if ($content_type ~* "(application/x-www-form-urlencoded|multipart/form-data)") {
                return 403;
            }
            
            proxy_pass http://backend:8000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 60s;
        }

        # Deny access to sensitive paths
        location ~ /\. {
            deny all;
            return 404;
        }
        
        location /docs {
            deny all;  # Disable API documentation in production
        }

        # Custom error pages
        error_page 403 /403.html;
        error_page 404 /404.html;
        error_page 500 /500.html;
        
        location = /403.html {
            internal;
            return 403 'Access Forbidden';
        }
        
        location = /404.html {
            internal;
            return 404 'Not Found';
        }
        
        location = /500.html {
            internal;
            return 500 'Internal Server Error';
        }
    }
} 